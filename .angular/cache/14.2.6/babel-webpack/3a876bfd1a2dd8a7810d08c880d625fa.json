{"ast":null,"code":"import { ElementRef } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nexport let InputFormatDirective = /*#__PURE__*/(() => {\n  class InputFormatDirective {\n    constructor(el) {\n      this.el = el;\n    }\n\n    onBlur() {\n      let value = this.el.nativeElement.value;\n\n      if (this.format == \"lowercase\") {\n        this.el.nativeElement.value = value.toLowerCase();\n      } else {\n        this.el.nativeElement.value = value.toUpperCase();\n      }\n    }\n\n    onFocus() {\n      console.log('on Focus');\n    }\n\n  }\n\n  InputFormatDirective.ɵfac = function InputFormatDirective_Factory(t) {\n    return new (t || InputFormatDirective)(i0.ɵɵdirectiveInject(i0.ElementRef));\n  };\n\n  InputFormatDirective.ɵdir = /*@__PURE__*/i0.ɵɵdefineDirective({\n    type: InputFormatDirective,\n    selectors: [[\"\", \"appInputFormat\", \"\"]],\n    hostBindings: function InputFormatDirective_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"blur\", function InputFormatDirective_blur_HostBindingHandler() {\n          return ctx.onBlur();\n        })(\"focus\", function InputFormatDirective_focus_HostBindingHandler() {\n          return ctx.onFocus();\n        });\n      }\n    },\n    inputs: {\n      format: [\"appInputFormat\", \"format\"]\n    }\n  });\n  return InputFormatDirective;\n})();","map":null,"metadata":{},"sourceType":"module"}